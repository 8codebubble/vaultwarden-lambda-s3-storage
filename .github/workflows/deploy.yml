name: Deploy Vaultwarden with Litestream

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Download latest Vaultwarden release
        run: |
          VAULTWARDEN_URL=$(curl -s https://api.github.com/repos/dani-garcia/vaultwarden/releases/latest | jq -r '.zipball_url')
          curl -L $VAULTWARDEN_URL -o vaultwarden.zip
          unzip vaultwarden.zip -d vaultwarden


      - name: Generate Litestream configuration
        run: |
          cat <<EOF > litestream.yml
          dbs:
            - path: /vaultwarden/data/db.sqlite3
              replicas:
                - type: s3
                  bucket: "${{ env.LITESTREAM_BUCKET }}"
                  path: db.sqlite3
                  endpoint: "${{ env.LITESTREAM_ENDPOINT }}"
          EOF

      - name: Build Docker image
        run: |
          docker build -t vaultwarden-lambda-s3-storage .
          docker tag vaultwarden-lambda-s3-storage ${{ secrets.DOCKERHUB_USERNAME }}/vaultwarden-lambda-s3-storage:latest

      - name: Push to DockerHub
        run: |
          echo "${{ secrets.DOCKERHUB_PASSWORD }}" | docker login -u "${{ secrets.DOCKERHUB_USERNAME }}" --password-stdin
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/vaultwarden-lambda-s3-storage:latest

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}


      - name: Ensure Lambda Function Exists
        run: |
          if ! aws lambda get-function --function-name vaultwarden; then
            echo "Creating Lambda function..."
            aws lambda create-function --function-name vaultwarden \
              --runtime provided.al2 \
              --role arn:aws:iam::${{ secrets.AWS_ACCOUNT_ID }}:role/LambdaExecutionRole \
              --handler bootstrap \
              --code ImageUri=${{ secrets.DOCKERHUB_USERNAME }}/vaultwarden-lambda-s3-storage:latest
          else
            echo "Lambda function already exists."
          fi

      - name: Update Lambda function
        run: |
          aws lambda update-function-code --function-name vaultwarden \
            --image-uri ${{ secrets.DOCKERHUB_USERNAME }}/vaultwarden-lambda-s3-storage:latest

